name: Dart Pull Request Tests

on:
    pull_request:
      types: [opened, synchronize, reopened]

jobs:
   run_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
    - name: Run complete action
      id: complete_action
      run: |
        dart pub get
        cd linteo_extractor
        dart pub get
        dart test
    - name: Add success label
      if: success()
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const prNumber = context.payload.pull_request.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const label = "test-succeded";  // Change to your desired label
          github.issues.removeLabel({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            name: "test-failed"
            });
          github.issues.addLabels({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            labels: [label]
            });

          const body = 'Thank you for your pull request!'; // Your comment here
  


          github.issues.createComment({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            body: body
          });

    - name: Add failure label if tests fail
      if: failure()
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const prNumber = context.payload.pull_request.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const label = "test-failed";  // Change to your desired label
          
          github.issues.removeLabel({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            name: "test-succeded"
            });

          github.issues.addLabels({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            labels: [label]
            });

          const body = 'Thank you for your pull request!'; // Your comment here
       
          github.issues.createComment({
            owner: owner,
            repo: repo,
            issue_number: prNumber,
            body: body
          });
    - name: Send custom JSON data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}